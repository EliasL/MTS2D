This is just documentation for myself. 

I have had some trouble knowing whether M[a][b] was counting a rows or a columns.
From my education, I have mostly been exposed to vectors, using (x,y), where x
refers to the horizontal displacement, and y, very specifically always the
second parameter, refers to the vertical displacement. In many matrix libraries,
this is not how things are implemented. Due to efficiency, and ease of
implementation, it is often better to use [row][col], where row selects WHAT row
should be considered, and col selects WHAT column should be selected. I think I
even for a period of time convinced myself that row would be the index along the
row that the element should be selected in. This would preserve the (x,y) mentality,
and was therefore easy for me to think of. Here I want to collect what the
most common indexing operations SHOULD look like. 

- Access element

    M = 1 2 3
        4 5 6
        7 8 9

    M[0][0] == 1
    M[1][2] == 6


- Doubble for loop

    for (int i = 0; i < rows; ++i) {      // Loop over rows
        for (int j = 0; j < columns; ++j) {  // Loop over columns
            // Access the element at matrix[i][j]
        }
    }

- Printing position
